//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CodeBase.Components.Building.BuildingPlanComponent buildingPlan { get { return (CodeBase.Components.Building.BuildingPlanComponent)GetComponent(GameComponentsLookup.BuildingPlan); } }
    public bool hasBuildingPlan { get { return HasComponent(GameComponentsLookup.BuildingPlan); } }

    public void AddBuildingPlan(CodeBase.Data.StaticData.BuildingType newBuildingType) {
        var index = GameComponentsLookup.BuildingPlan;
        var component = (CodeBase.Components.Building.BuildingPlanComponent)CreateComponent(index, typeof(CodeBase.Components.Building.BuildingPlanComponent));
        component.BuildingType = newBuildingType;
        AddComponent(index, component);
    }

    public void ReplaceBuildingPlan(CodeBase.Data.StaticData.BuildingType newBuildingType) {
        var index = GameComponentsLookup.BuildingPlan;
        var component = (CodeBase.Components.Building.BuildingPlanComponent)CreateComponent(index, typeof(CodeBase.Components.Building.BuildingPlanComponent));
        component.BuildingType = newBuildingType;
        ReplaceComponent(index, component);
    }

    public void RemoveBuildingPlan() {
        RemoveComponent(GameComponentsLookup.BuildingPlan);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBuildingPlan;

    public static Entitas.IMatcher<GameEntity> BuildingPlan {
        get {
            if (_matcherBuildingPlan == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BuildingPlan);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBuildingPlan = matcher;
            }

            return _matcherBuildingPlan;
        }
    }
}
